{"version":3,"file":"static/js/2.d4ced9fe.chunk.js","mappings":"+MAKO,MAAMA,EAAcA,KAEvB,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,MAEjBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,IAqCvD,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAWH,UAAU,OAAMC,SAAC,iBAC3CC,EAAAA,EAAAA,KAAA,SACIF,UAAU,OACVI,KAAK,OACLC,GAAG,WACHC,MAAOd,EACPe,SAAUC,GAAKf,EAAYe,EAAEC,OAAOH,UAExCJ,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,SAASH,UAAU,OAAMC,SAAC,aACzCC,EAAAA,EAAAA,KAAA,SACIF,UAAU,OACVI,KAAK,OACLC,GAAG,SACHC,MAAOX,EACPY,SAAUC,GAAKZ,EAAUY,EAAEC,OAAOH,UAEtCJ,EAAAA,EAAAA,KAAA,UAAQF,UAAU,uBAAuBU,QAtD1BC,UACnB,IAEI,MAAMC,EAASC,EAAAA,GAAKvB,YAAYwB,IAG1BC,EAAoBvB,EAASwB,MAAM,KAAKC,UAAUC,KAAK,KACvDC,EAAkBxB,EAAOqB,MAAM,KAAKC,UAAUC,KAAK,KAGnDE,QAAsBC,EAAAA,EAAAA,KACxBC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,WACxBC,EAAAA,EAAAA,IAAM,WAAY,KAAMV,IACxBU,EAAAA,EAAAA,IAAM,WAAY,KAAMN,IACxBM,EAAAA,EAAAA,IAAM,SAAU,KAAMb,KAKxBc,EAAY,GAClBN,EAAcO,SAAQC,IAClB,MAAMC,EAAOD,EAAIC,OACjBH,EAAUI,KAAKD,EAAK,IAIxB/B,EAAmB4B,GAEnBK,QAAQC,IAAI,iCAAkCN,EAClD,CAAE,MAAOO,GACLF,QAAQE,MAAM,2BAA4BA,EAC9C,GAuBqEhC,SAAC,qBAGlEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,qBACrBF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGZC,EAAAA,EAAAA,KAAA,SAAAD,SACKJ,EAAgBqC,KAAI,CAACC,EAAYC,KAC9BrC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKkC,EAAWE,QAChBnC,EAAAA,EAAAA,KAAA,MAAAD,SAAKkC,EAAWG,YAChBpC,EAAAA,EAAAA,KAAA,MAAAD,SAAKkC,EAAWI,WAHXH,YAQnB,C","sources":["MyComp/MyReportgen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth, firestore } from '../Authen/firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { useAuth } from '../Authen/useAuth';\r\n\r\nexport const MyReportgen = () => {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    const [fromDate, setFromDate] = useState('');\r\n    const [toDate, setToDate] = useState('');\r\n    const [usersAttendance, setUsersAttendance] = useState([]);\r\n\r\n    const generateReport = async () => {\r\n        try {\r\n            // Get the current authenticated user's ID\r\n            const userId = auth.currentUser.uid;\r\n\r\n            // Format the dates to match Firestore date format (DD-MM-YYYY)\r\n            const formattedFromDate = fromDate.split('-').reverse().join('-');\r\n            const formattedToDate = toDate.split('-').reverse().join('-');\r\n\r\n            // Query Firestore using formatted dates and user ID\r\n            const querySnapshot = await getDocs(\r\n                query(collection(firestore, 'attend'),\r\n                    where('markedAt', '>=', formattedFromDate),\r\n                    where('markedAt', '<=', formattedToDate),\r\n                    where('userId', '==', userId) // Filter by user ID\r\n                )\r\n            );\r\n\r\n            // Extract data from query snapshot\r\n            const usersData = [];\r\n            querySnapshot.forEach(doc => {\r\n                const data = doc.data();\r\n                usersData.push(data);\r\n            });\r\n\r\n            // Update state with retrieved data\r\n            setUsersAttendance(usersData);\r\n\r\n            console.log('Report generated successfully:', usersData);\r\n        } catch (error) {\r\n            console.error('Error generating report:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='container my-4'>\r\n            <h1>Generate Attendance Report</h1>\r\n            <label htmlFor=\"fromDate\" className='mx-2'> From Date </label>\r\n            <input\r\n                className='mx-2'\r\n                type=\"date\"\r\n                id=\"fromDate\"\r\n                value={fromDate}\r\n                onChange={e => setFromDate(e.target.value)}\r\n            />\r\n            <label htmlFor=\"toDate\" className='mx-2'>To Date</label>\r\n            <input\r\n                className='mx-2'\r\n                type=\"date\"\r\n                id=\"toDate\"\r\n                value={toDate}\r\n                onChange={e => setToDate(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-primary mx-2\" onClick={generateReport}>\r\n                Generate Report\r\n            </button>\r\n            <h2 className='my-4'>User Attendance</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>User</th>\r\n                        <th>Date</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersAttendance.map((attendance, index) => (\r\n                        <tr key={index}>\r\n                            <td>{attendance.user}</td>\r\n                            <td>{attendance.markedAt}</td>\r\n                            <td>{attendance.status}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["MyReportgen","currentUser","useAuth","fromDate","setFromDate","useState","toDate","setToDate","usersAttendance","setUsersAttendance","_jsxs","className","children","_jsx","htmlFor","type","id","value","onChange","e","target","onClick","async","userId","auth","uid","formattedFromDate","split","reverse","join","formattedToDate","querySnapshot","getDocs","query","collection","firestore","where","usersData","forEach","doc","data","push","console","log","error","map","attendance","index","user","markedAt","status"],"sourceRoot":""}