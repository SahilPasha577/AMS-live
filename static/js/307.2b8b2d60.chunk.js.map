{"version":3,"file":"static/js/307.2b8b2d60.chunk.js","mappings":"2MAIO,MAAMA,EAAkBA,KAC3B,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,IAgCvD,OAGIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBF,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gCACJF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAWD,UAAU,OAAMF,SAAC,iBAC3CF,EAAAA,EAAAA,KAAA,SACII,UAAU,OACVE,KAAK,OACLC,GAAG,WACHC,MAAOf,EACPgB,SAAUC,GAAKhB,EAAYgB,EAAEC,OAAOH,UAExCR,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,SAASD,UAAU,OAAMF,SAAC,aACzCF,EAAAA,EAAAA,KAAA,SACII,UAAU,OACVE,KAAK,OACLC,GAAG,SACHC,MAAOZ,EACPa,SAAUC,GAAKb,EAAUa,EAAEC,OAAOH,UAEtCR,EAAAA,EAAAA,KAAA,UAAQI,UAAU,uBAAuBQ,QArD9BC,UACnB,IAEI,MAAMC,EAAoBrB,EAASsB,MAAM,KAAKC,UAAUC,KAAK,KACvDC,EAAkBtB,EAAOmB,MAAM,KAAKC,UAAUC,KAAK,KAGnDE,QAAsBC,EAAAA,EAAAA,KACxBC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAW,WACxBC,EAAAA,EAAAA,IAAM,WAAY,KAAMV,IACxBU,EAAAA,EAAAA,IAAM,WAAY,KAAMN,KAK1BO,EAAY,GAClBN,EAAcO,SAAQC,IAClB,MAAMC,EAAOD,EAAIC,OACjBH,EAAUI,KAAKD,EAAK,IAIxB7B,EAAmB0B,GAEnBK,QAAQC,IAAI,iCAAkCN,EAClD,CAAE,MAAOO,GACLF,QAAQE,MAAM,2BAA4BA,EAC9C,GA0ByE9B,SAAC,qBAGlEF,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMF,SAAC,sBACrBC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGZF,EAAAA,EAAAA,KAAA,SAAAE,SACKJ,EAAgBmC,KAAI,CAACC,EAAYC,KAC9BhC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKgC,EAAWE,QAChBpC,EAAAA,EAAAA,KAAA,MAAAE,SAAKgC,EAAWG,YAChBrC,EAAAA,EAAAA,KAAA,MAAAE,SAAKgC,EAAWI,WAHXH,cAS1B,C","sources":["MyComp/ReportGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth, firestore } from '../Authen/firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\n\r\nexport const ReportGenerator = () => {\r\n    const [fromDate, setFromDate] = useState('');\r\n    const [toDate, setToDate] = useState('');\r\n    const [usersAttendance, setUsersAttendance] = useState([]);\r\n\r\n    const generateReport = async () => {\r\n        try {\r\n            // Format the dates to match Firestore date format (DD-MM-YYYY)\r\n            const formattedFromDate = fromDate.split('-').reverse().join('-');\r\n            const formattedToDate = toDate.split('-').reverse().join('-');\r\n\r\n            // Query Firestore using formatted dates\r\n            const querySnapshot = await getDocs(\r\n                query(collection(firestore, 'attend'),\r\n                    where('markedAt', '>=', formattedFromDate),\r\n                    where('markedAt', '<=', formattedToDate)\r\n                )\r\n            );\r\n\r\n            // Extract data from query snapshot\r\n            const usersData = [];\r\n            querySnapshot.forEach(doc => {\r\n                const data = doc.data();\r\n                usersData.push(data);\r\n            });\r\n\r\n            // Update state with retrieved data\r\n            setUsersAttendance(usersData);\r\n\r\n            console.log('Report generated successfully:', usersData);\r\n        } catch (error) {\r\n            console.error('Error generating report:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n\r\n            <div className='container my-4'>\r\n                <h1>Generate Attendance Report</h1>\r\n                <label htmlFor=\"fromDate\" className='mx-2'> From Date </label>\r\n                <input\r\n                    className='mx-2'\r\n                    type=\"date\"\r\n                    id=\"fromDate\"\r\n                    value={fromDate}\r\n                    onChange={e => setFromDate(e.target.value)}\r\n                />\r\n                <label htmlFor=\"toDate\" className='mx-2'>To Date</label>\r\n                <input\r\n                    className='mx-2'\r\n                    type=\"date\"\r\n                    id=\"toDate\"\r\n                    value={toDate}\r\n                    onChange={e => setToDate(e.target.value)}\r\n                />\r\n                <button className=\"btn btn-primary mx-2\" onClick={generateReport}>\r\n                    Generate Report\r\n                </button>\r\n                <h2 className='my-4'>Users Attendance</h2>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersAttendance.map((attendance, index) => (\r\n                            <tr key={index}>\r\n                                <td>{attendance.user}</td>\r\n                                <td>{attendance.markedAt}</td>\r\n                                <td>{attendance.status}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["ReportGenerator","fromDate","setFromDate","useState","toDate","setToDate","usersAttendance","setUsersAttendance","_jsx","_Fragment","children","_jsxs","className","htmlFor","type","id","value","onChange","e","target","onClick","async","formattedFromDate","split","reverse","join","formattedToDate","querySnapshot","getDocs","query","collection","firestore","where","usersData","forEach","doc","data","push","console","log","error","map","attendance","index","user","markedAt","status"],"sourceRoot":""}